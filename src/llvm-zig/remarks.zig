const LLVMtype = @import("types.zig");

pub const LLVMRemarkTypeUnknown: c_int = 0;
pub const LLVMRemarkTypePassed: c_int = 1;
pub const LLVMRemarkTypeMissed: c_int = 2;
pub const LLVMRemarkTypeAnalysis: c_int = 3;
pub const LLVMRemarkTypeAnalysisFPCommute: c_int = 4;
pub const LLVMRemarkTypeAnalysisAliasing: c_int = 5;
pub const LLVMRemarkTypeFailure: c_int = 6;
pub const enum_LLVMRemarkType = c_uint;
pub const LLVMRemarkOpaqueString = opaque {};
pub const LLVMRemarkStringRef = ?*LLVMRemarkOpaqueString;
pub extern fn LLVMRemarkStringGetData(String: LLVMRemarkStringRef) [*c]const u8;
pub extern fn LLVMRemarkStringGetLen(String: LLVMRemarkStringRef) u32;
pub const LLVMRemarkOpaqueDebugLoc = opaque {};
pub const LLVMRemarkDebugLocRef = ?*LLVMRemarkOpaqueDebugLoc;
pub extern fn LLVMRemarkDebugLocGetSourceFilePath(DL: LLVMRemarkDebugLocRef) LLVMRemarkStringRef;
pub extern fn LLVMRemarkDebugLocGetSourceLine(DL: LLVMRemarkDebugLocRef) u32;
pub extern fn LLVMRemarkDebugLocGetSourceColumn(DL: LLVMRemarkDebugLocRef) u32;
pub const LLVMRemarkOpaqueArg = opaque {};
pub const LLVMRemarkArgRef = ?*LLVMRemarkOpaqueArg;
pub extern fn LLVMRemarkArgGetKey(Arg: LLVMRemarkArgRef) LLVMRemarkStringRef;
pub extern fn LLVMRemarkArgGetValue(Arg: LLVMRemarkArgRef) LLVMRemarkStringRef;
pub extern fn LLVMRemarkArgGetDebugLoc(Arg: LLVMRemarkArgRef) LLVMRemarkDebugLocRef;
pub const LLVMRemarkOpaqueEntry = opaque {};
pub const LLVMRemarkEntryRef = ?*LLVMRemarkOpaqueEntry;
pub extern fn LLVMRemarkEntryDispose(Remark: LLVMRemarkEntryRef) void;
pub extern fn LLVMRemarkEntryGetType(Remark: LLVMRemarkEntryRef) enum_LLVMRemarkType;
pub extern fn LLVMRemarkEntryGetPassName(Remark: LLVMRemarkEntryRef) LLVMRemarkStringRef;
pub extern fn LLVMRemarkEntryGetRemarkName(Remark: LLVMRemarkEntryRef) LLVMRemarkStringRef;
pub extern fn LLVMRemarkEntryGetFunctionName(Remark: LLVMRemarkEntryRef) LLVMRemarkStringRef;
pub extern fn LLVMRemarkEntryGetDebugLoc(Remark: LLVMRemarkEntryRef) LLVMRemarkDebugLocRef;
pub extern fn LLVMRemarkEntryGetHotness(Remark: LLVMRemarkEntryRef) u64;
pub extern fn LLVMRemarkEntryGetNumArgs(Remark: LLVMRemarkEntryRef) u32;
pub extern fn LLVMRemarkEntryGetFirstArg(Remark: LLVMRemarkEntryRef) LLVMRemarkArgRef;
pub extern fn LLVMRemarkEntryGetNextArg(It: LLVMRemarkArgRef, Remark: LLVMRemarkEntryRef) LLVMRemarkArgRef;
pub const LLVMRemarkOpaqueParser = opaque {};
pub const LLVMRemarkParserRef = ?*LLVMRemarkOpaqueParser;
pub extern fn LLVMRemarkParserCreateYAML(Buf: ?*const anyopaque, Size: u64) LLVMRemarkParserRef;
pub extern fn LLVMRemarkParserCreateBitstream(Buf: ?*const anyopaque, Size: u64) LLVMRemarkParserRef;
pub extern fn LLVMRemarkParserGetNext(Parser: LLVMRemarkParserRef) LLVMRemarkEntryRef;
pub extern fn LLVMRemarkParserHasError(Parser: LLVMRemarkParserRef) LLVMtype.LLVMBool;
pub extern fn LLVMRemarkParserGetErrorMessage(Parser: LLVMRemarkParserRef) [*c]const u8;
pub extern fn LLVMRemarkParserDispose(Parser: LLVMRemarkParserRef) void;
pub extern fn LLVMRemarkVersion() u32;
